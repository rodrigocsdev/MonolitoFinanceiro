unit MonolitoFinanceiro.Model.ContasReceber;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Datasnap.Provider,
  Data.DB, Datasnap.DBClient, FireDAC.Comp.DataSet, FireDAC.Comp.Client,
  MonolitoFinanceiro.Model.Conexao,
  MonolitoFinanceiro.Model.Entidades.ContaReceber,
  MonolitoFinanceiro.Model.Entidades.ContaReceber.Detalhe;

type
  TdmContasReceber = class(TDataModule)
    sqlContasReceber: TFDQuery;
    cdsContasReceber: TClientDataSet;
    dspContasReceber: TDataSetProvider;
    cdsContasReceberid: TStringField;
    cdsContasRecebernumero_documento: TStringField;
    cdsContasReceberdescricao: TStringField;
    cdsContasReceberparcela: TIntegerField;
    cdsContasRecebervalor_parcela: TFMTBCDField;
    cdsContasRecebervalor_venda: TFMTBCDField;
    cdsContasRecebervalor_abatido: TFMTBCDField;
    cdsContasReceberdata_venda: TDateField;
    cdsContasReceberdata_cadastro: TDateField;
    cdsContasReceberdata_vencimento: TDateField;
    cdsContasReceberdata_recebimento: TDateField;
    cdsContasReceberstatus: TStringField;
  private
    { Private declarations }
    procedure GravarContaReceber(ContaPagar: TModelContaReceber; SQLGravar : TFDQuery);
    procedure GravarContaReceberDetalhe(ContaPagarDetalhe : TModelContaReceberDetalhe; SQLGravar : TFDQuery);
  public
    { Public declarations }
    function GetContaReceber(ID : string) : TModelContaReceber;
    procedure BaixarContaReceber(BaixaPagar : TModelContaReceberDetalhe);
  end;

var
  dmContasReceber: TdmContasReceber;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

end.
